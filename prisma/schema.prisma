// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id        Int         @id @default(autoincrement())
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  name      String
  phone     String?     @unique
  email     String?     @unique
  avatar    String?
  tokens    Token[]
  Product   Product[]
  Favorite  Favorite[]
  Post      Post[]
  answer    Answer[]
  WonderToo WonderToo[]
}

model Token {
  Id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  payload   String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int

  @@index([userId])
}

model Product {
  Id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  image     String
  name      String
  price     Int
  desc      String   @db.MediumText

  Favorite Favorite[]

  @@index([userId])
}

model Favorite {
  Id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  product   Product  @relation(fields: [productId], references: [Id], onDelete: Cascade)
  userId    Int
  productId Int

  @@index([userId])
  @@index([productId])
}

model Post {
  Id        Int         @id @default(autoincrement())
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  user      User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  question  String      @db.MediumText
  category  String
  answer    Answer[]
  WonderToo WonderToo[]

  @@index([userId])
}

model Answer {
  Id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  post      Post     @relation(fields: [postId], references: [Id], onDelete: Cascade)
  userId    Int
  postId    Int

  @@index([userId])
  @@index([postId])
}

model WonderToo {
  Id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  post      Post     @relation(fields: [postId], references: [Id], onDelete: Cascade)
  userId    Int
  postId    Int

  @@index([userId])
  @@index([postId])
}
